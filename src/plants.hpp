#pragma once

#include <map>
#include "common.hpp"

enum class PLANT_ID {
    PLANT_1 = 0,
    PLANT_2 = PLANT_1 + 1,
    PLANT_3 = PLANT_2 + 1
};

struct animation {
    const TEXTURE_ASSET_ID* textures;
    int size;
    int duration;
    animation(const TEXTURE_ASSET_ID* textures, int size, int duration) : textures(textures), size(size), duration(duration) {}
};

struct animation_state {
    animation idle;
    animation attack;
    animation_state(animation idle, animation attack) : idle(idle), attack(attack) {}
};

const TEXTURE_ASSET_ID PLANT_1_IDLE_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_1_IDLE_1,
    TEXTURE_ASSET_ID::PLANT_1_IDLE_2,
    TEXTURE_ASSET_ID::PLANT_1_IDLE_3,
    TEXTURE_ASSET_ID::PLANT_1_IDLE_4
};
const TEXTURE_ASSET_ID PLANT_2_IDLE_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_2_IDLE_1,
    TEXTURE_ASSET_ID::PLANT_2_IDLE_2,
    TEXTURE_ASSET_ID::PLANT_2_IDLE_3,
    TEXTURE_ASSET_ID::PLANT_2_IDLE_4
};
const TEXTURE_ASSET_ID PLANT_3_IDLE_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_3_IDLE_1,
    TEXTURE_ASSET_ID::PLANT_3_IDLE_2,
    TEXTURE_ASSET_ID::PLANT_3_IDLE_3,
    TEXTURE_ASSET_ID::PLANT_3_IDLE_4
};

const TEXTURE_ASSET_ID PLANT_1_ATTACK_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_1,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_2,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_3,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_4,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_5,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_6,
    TEXTURE_ASSET_ID::PLANT_1_ATTACK_7
};
const TEXTURE_ASSET_ID PLANT_2_ATTACK_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_1,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_2,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_3,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_4,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_5,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_6,
    TEXTURE_ASSET_ID::PLANT_2_ATTACK_7
};
const TEXTURE_ASSET_ID PLANT_3_ATTACK_ANIM_TEXTURES[] = {
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_1,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_2,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_3,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_4,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_5,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_6,
    TEXTURE_ASSET_ID::PLANT_3_ATTACK_7
};

const int PLANT_1_IDLE_ANIM_SIZE = sizeof(PLANT_1_IDLE_ANIM_TEXTURES) / sizeof(PLANT_1_IDLE_ANIM_TEXTURES[0]);
const int PLANT_2_IDLE_ANIM_SIZE = sizeof(PLANT_2_IDLE_ANIM_TEXTURES) / sizeof(PLANT_2_IDLE_ANIM_TEXTURES[0]);
const int PLANT_3_IDLE_ANIM_SIZE = sizeof(PLANT_3_IDLE_ANIM_TEXTURES) / sizeof(PLANT_3_IDLE_ANIM_TEXTURES[0]);
const int PLANT_1_ATTACK_ANIM_SIZE = sizeof(PLANT_1_ATTACK_ANIM_TEXTURES) / sizeof(PLANT_1_ATTACK_ANIM_TEXTURES[0]);
const int PLANT_2_ATTACK_ANIM_SIZE = sizeof(PLANT_2_ATTACK_ANIM_TEXTURES) / sizeof(PLANT_2_ATTACK_ANIM_TEXTURES[0]);
const int PLANT_3_ATTACK_ANIM_SIZE = sizeof(PLANT_3_ATTACK_ANIM_TEXTURES) / sizeof(PLANT_3_ATTACK_ANIM_TEXTURES[0]);

const int PLANT_1_IDLE_ANIM_DURATION = 2000;
const int PLANT_2_IDLE_ANIM_DURATION = 2000;
const int PLANT_3_IDLE_ANIM_DURATION = 2000;
const int PLANT_1_ATTACK_ANIM_DURATION = 4000;
const int PLANT_2_ATTACK_ANIM_DURATION = 2000;
const int PLANT_3_ATTACK_ANIM_DURATION = 1000;

const animation PLANT_1_IDLE_ANIM(PLANT_1_IDLE_ANIM_TEXTURES, PLANT_1_IDLE_ANIM_SIZE, PLANT_1_IDLE_ANIM_DURATION);
const animation PLANT_2_IDLE_ANIM(PLANT_2_IDLE_ANIM_TEXTURES, PLANT_2_IDLE_ANIM_SIZE, PLANT_2_IDLE_ANIM_DURATION);
const animation PLANT_3_IDLE_ANIM(PLANT_3_IDLE_ANIM_TEXTURES, PLANT_3_IDLE_ANIM_SIZE, PLANT_3_IDLE_ANIM_DURATION);
const animation PLANT_1_ATTACK_ANIM(PLANT_1_ATTACK_ANIM_TEXTURES, PLANT_1_ATTACK_ANIM_SIZE, PLANT_1_ATTACK_ANIM_DURATION);
const animation PLANT_2_ATTACK_ANIM(PLANT_2_ATTACK_ANIM_TEXTURES, PLANT_2_ATTACK_ANIM_SIZE, PLANT_2_ATTACK_ANIM_DURATION);
const animation PLANT_3_ATTACK_ANIM(PLANT_3_ATTACK_ANIM_TEXTURES, PLANT_3_ATTACK_ANIM_SIZE, PLANT_3_ATTACK_ANIM_DURATION);

const int PLANT_1_HEALTH = 15;
const int PLANT_2_HEALTH = 15;
const int PLANT_3_HEALTH = 15;

const int PLANT_1_DAMAGE = 10;
const int PLANT_2_DAMAGE = 10;
const int PLANT_3_DAMAGE = 10;

const int PLANT_1_RANGE = GRID_CELL_WIDTH_PX * 20;
const int PLANT_2_RANGE = GRID_CELL_WIDTH_PX * 10;
const int PLANT_3_RANGE = GRID_CELL_WIDTH_PX * 5;

const std::map<PLANT_ID, animation_state>
PLANT_ANIMATION_MAP = {
    {PLANT_ID::PLANT_1, animation_state(PLANT_1_IDLE_ANIM, PLANT_1_ATTACK_ANIM)},
    {PLANT_ID::PLANT_2, animation_state(PLANT_2_IDLE_ANIM, PLANT_2_ATTACK_ANIM)},
    {PLANT_ID::PLANT_3, animation_state(PLANT_3_IDLE_ANIM, PLANT_3_ATTACK_ANIM)}
};
